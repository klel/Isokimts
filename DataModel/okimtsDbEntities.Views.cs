//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System.Data.Entity.Infrastructure.MappingViews;

[assembly: DbMappingViewCacheTypeAttribute(
    typeof(DataModel.okimtsDbEntities),
    typeof(Edm_EntityMappingGeneratedViews.ViewsForBaseEntitySetsc18af2ec17ffda2a31725facecd7b7b1db0ef400a3f6f9f803fbca63a94289cd))]

namespace Edm_EntityMappingGeneratedViews
{
    using System;
    using System.CodeDom.Compiler;
    using System.Data.Entity.Core.Metadata.Edm;

    /// <summary>
    /// Implements a mapping view cache.
    /// </summary>
    [GeneratedCode("Entity Framework Power Tools", "0.9.0.0")]
    internal sealed class ViewsForBaseEntitySetsc18af2ec17ffda2a31725facecd7b7b1db0ef400a3f6f9f803fbca63a94289cd : DbMappingViewCache
    {
        /// <summary>
        /// Gets a hash value computed over the mapping closure.
        /// </summary>
        public override string MappingHashValue
        {
            get { return "c18af2ec17ffda2a31725facecd7b7b1db0ef400a3f6f9f803fbca63a94289cd"; }
        }

        /// <summary>
        /// Gets a view corresponding to the specified extent.
        /// </summary>
        /// <param name="extent">The extent.</param>
        /// <returns>The mapping view, or null if the extent is not associated with a mapping view.</returns>
        public override DbMappingView GetView(EntitySetBase extent)
        {
            if (extent == null)
            {
                throw new ArgumentNullException("extent");
            }

            var extentName = extent.EntityContainer.Name + "." + extent.Name;

            if (extentName == "okimtsDbModelStoreContainer.BuildinObjects")
            {
                return GetView0();
            }

            if (extentName == "okimtsDbModelStoreContainer.ContractorEmployes")
            {
                return GetView1();
            }

            if (extentName == "okimtsDbModelStoreContainer.Contractors")
            {
                return GetView2();
            }

            if (extentName == "okimtsDbModelStoreContainer.DocStates")
            {
                return GetView3();
            }

            if (extentName == "okimtsDbModelStoreContainer.Employes")
            {
                return GetView4();
            }

            if (extentName == "okimtsDbModelStoreContainer.FileMetaDatas")
            {
                return GetView5();
            }

            if (extentName == "okimtsDbModelStoreContainer.InboxDocuments")
            {
                return GetView6();
            }

            if (extentName == "okimtsDbModelStoreContainer.OutboxDocuments")
            {
                return GetView7();
            }

            if (extentName == "okimtsDbModelStoreContainer.TypesOfOutboxDocs")
            {
                return GetView8();
            }

            if (extentName == "okimtsDbModelStoreContainer.Users")
            {
                return GetView9();
            }

            if (extentName == "okimtsDbModelStoreContainer.CompanyStructures")
            {
                return GetView10();
            }

            if (extentName == "okimtsDbEntities.BuildinObjects")
            {
                return GetView11();
            }

            if (extentName == "okimtsDbEntities.ContractorEmployes")
            {
                return GetView12();
            }

            if (extentName == "okimtsDbEntities.Contractors")
            {
                return GetView13();
            }

            if (extentName == "okimtsDbEntities.DocStates")
            {
                return GetView14();
            }

            if (extentName == "okimtsDbEntities.Employes")
            {
                return GetView15();
            }

            if (extentName == "okimtsDbEntities.FileMetaDatas")
            {
                return GetView16();
            }

            if (extentName == "okimtsDbEntities.InboxDocuments")
            {
                return GetView17();
            }

            if (extentName == "okimtsDbEntities.OutboxDocuments")
            {
                return GetView18();
            }

            if (extentName == "okimtsDbEntities.TypesOfOutboxDocs")
            {
                return GetView19();
            }

            if (extentName == "okimtsDbEntities.Users")
            {
                return GetView20();
            }

            if (extentName == "okimtsDbEntities.CompanyStructures")
            {
                return GetView21();
            }

            return null;
        }

        /// <summary>
        /// Gets the view for okimtsDbModelStoreContainer.BuildinObjects.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView0()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing BuildinObjects
        [okimtsDbModel.Store.BuildinObjects](T1.BuildinObjects_Id, T1.BuildinObjects_ObjName, T1.BuildinObjects_ObjCode, T1.BuildinObjects_ProjCypher, T1.BuildinObjects_SZS)
    FROM (
        SELECT 
            T.Id AS BuildinObjects_Id, 
            T.ObjName AS BuildinObjects_ObjName, 
            T.ObjCode AS BuildinObjects_ObjCode, 
            T.ProjCypher AS BuildinObjects_ProjCypher, 
            T.SZS AS BuildinObjects_SZS, 
            True AS _from0
        FROM okimtsDbEntities.BuildinObjects AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for okimtsDbModelStoreContainer.ContractorEmployes.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView1()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing ContractorEmployes
        [okimtsDbModel.Store.ContractorEmployes](T1.ContractorEmployes_Id, T1.ContractorEmployes_FullName, T1.ContractorEmployes_FName, T1.ContractorEmployes_SName, T1.ContractorEmployes_LName, T1.ContractorEmployes_LNameDateln, T1.ContractorEmployes_Post, T1.ContractorEmployes_PostDateln, T1.ContractorEmployes_Gender, T1.ContractorEmployes_Email, T1.ContractorEmployes_Phone, T1.ContractorEmployes_Contractor)
    FROM (
        SELECT 
            T.Id AS ContractorEmployes_Id, 
            T.FullName AS ContractorEmployes_FullName, 
            T.FName AS ContractorEmployes_FName, 
            T.SName AS ContractorEmployes_SName, 
            T.LName AS ContractorEmployes_LName, 
            T.LNameDateln AS ContractorEmployes_LNameDateln, 
            T.Post AS ContractorEmployes_Post, 
            T.PostDateln AS ContractorEmployes_PostDateln, 
            T.Gender AS ContractorEmployes_Gender, 
            T.Email AS ContractorEmployes_Email, 
            T.Phone AS ContractorEmployes_Phone, 
            T.Contractor AS ContractorEmployes_Contractor, 
            True AS _from0
        FROM okimtsDbEntities.ContractorEmployes AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for okimtsDbModelStoreContainer.Contractors.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView2()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Contractors
        [okimtsDbModel.Store.Contractors](T1.Contractors_Id, T1.Contractors_OrgName, T1.Contractors_Email, T1.Contractors_Phone, T1.Contractors_Fax)
    FROM (
        SELECT 
            T.Id AS Contractors_Id, 
            T.OrgName AS Contractors_OrgName, 
            T.Email AS Contractors_Email, 
            T.Phone AS Contractors_Phone, 
            T.Fax AS Contractors_Fax, 
            True AS _from0
        FROM okimtsDbEntities.Contractors AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for okimtsDbModelStoreContainer.DocStates.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView3()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing DocStates
        [okimtsDbModel.Store.DocStates](T1.DocStates_Id, T1.DocStates_StateName)
    FROM (
        SELECT 
            T.Id AS DocStates_Id, 
            T.StateName AS DocStates_StateName, 
            True AS _from0
        FROM okimtsDbEntities.DocStates AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for okimtsDbModelStoreContainer.Employes.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView4()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Employes
        [okimtsDbModel.Store.Employes](T1.Employes_Id, T1.Employes_FullName, T1.Employes_NameInDocs, T1.Employes_FName, T1.Employes_SName, T1.Employes_LName, T1.Employes_State, T1.Employes_Email, T1.Employes_Phone, T1.Employes_Post, T1.Employes_DepartmentId)
    FROM (
        SELECT 
            T.Id AS Employes_Id, 
            T.FullName AS Employes_FullName, 
            T.NameInDocs AS Employes_NameInDocs, 
            T.FName AS Employes_FName, 
            T.SName AS Employes_SName, 
            T.LName AS Employes_LName, 
            T.State AS Employes_State, 
            T.Email AS Employes_Email, 
            T.Phone AS Employes_Phone, 
            T.Post AS Employes_Post, 
            T.DepartmentId AS Employes_DepartmentId, 
            True AS _from0
        FROM okimtsDbEntities.Employes AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for okimtsDbModelStoreContainer.FileMetaDatas.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView5()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing FileMetaDatas
        [okimtsDbModel.Store.FileMetaDatas](T1.FileMetaDatas_Id, T1.FileMetaDatas_FileName, T1.FileMetaDatas_UploadDataTime, T1.FileMetaDatas_Users, T1.FileMetaDatas_FileSize, T1.FileMetaDatas_Data)
    FROM (
        SELECT 
            T.Id AS FileMetaDatas_Id, 
            T.FileName AS FileMetaDatas_FileName, 
            T.UploadDataTime AS FileMetaDatas_UploadDataTime, 
            T.Users AS FileMetaDatas_Users, 
            T.FileSize AS FileMetaDatas_FileSize, 
            T.Data AS FileMetaDatas_Data, 
            True AS _from0
        FROM okimtsDbEntities.FileMetaDatas AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for okimtsDbModelStoreContainer.InboxDocuments.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView6()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing InboxDocuments
        [okimtsDbModel.Store.InboxDocuments](T1.InboxDocuments_Id, T1.InboxDocuments_Sender, T1.InboxDocuments_SenderNum, T1.InboxDocuments_SenderDate, T1.InboxDocuments_ResponseOn, T1.InboxDocuments_Reciever, T1.InboxDocuments_DocTheme, T1.InboxDocuments_DocState, T1.InboxDocuments_BuildingObj, T1.InboxDocuments_Files)
    FROM (
        SELECT 
            T.Id AS InboxDocuments_Id, 
            T.Sender AS InboxDocuments_Sender, 
            T.SenderNum AS InboxDocuments_SenderNum, 
            T.SenderDate AS InboxDocuments_SenderDate, 
            T.ResponseOn AS InboxDocuments_ResponseOn, 
            T.Reciever AS InboxDocuments_Reciever, 
            T.DocTheme AS InboxDocuments_DocTheme, 
            T.DocState AS InboxDocuments_DocState, 
            T.BuildingObj AS InboxDocuments_BuildingObj, 
            T.Files AS InboxDocuments_Files, 
            True AS _from0
        FROM okimtsDbEntities.InboxDocuments AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for okimtsDbModelStoreContainer.OutboxDocuments.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView7()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing OutboxDocuments
        [okimtsDbModel.Store.OutboxDocuments](T1.OutboxDocuments_Id, T1.OutboxDocuments_RecieverOrg, T1.OutboxDocuments_RecieverEmploye, T1.OutboxDocuments_BuildingObj, T1.OutboxDocuments_OutboxNum, T1.OutboxDocuments_OutboxDate, T1.OutboxDocuments_DocTheme, T1.OutboxDocuments_WhoSign, T1.OutboxDocuments_WhoMade, T1.OutboxDocuments_ResponseOn, T1.OutboxDocuments_SentDate, T1.OutboxDocuments_DocState, T1.OutboxDocuments_Files, T1.OutboxDocuments_TypeOfOutboxDoc)
    FROM (
        SELECT 
            T.Id AS OutboxDocuments_Id, 
            T.RecieverOrg AS OutboxDocuments_RecieverOrg, 
            T.RecieverEmploye AS OutboxDocuments_RecieverEmploye, 
            T.BuildingObj AS OutboxDocuments_BuildingObj, 
            T.OutboxNum AS OutboxDocuments_OutboxNum, 
            T.OutboxDate AS OutboxDocuments_OutboxDate, 
            T.DocTheme AS OutboxDocuments_DocTheme, 
            T.WhoSign AS OutboxDocuments_WhoSign, 
            T.WhoMade AS OutboxDocuments_WhoMade, 
            T.ResponseOn AS OutboxDocuments_ResponseOn, 
            T.SentDate AS OutboxDocuments_SentDate, 
            T.DocState AS OutboxDocuments_DocState, 
            T.Files AS OutboxDocuments_Files, 
            T.TypeOfOutboxDoc AS OutboxDocuments_TypeOfOutboxDoc, 
            True AS _from0
        FROM okimtsDbEntities.OutboxDocuments AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for okimtsDbModelStoreContainer.TypesOfOutboxDocs.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView8()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing TypesOfOutboxDocs
        [okimtsDbModel.Store.TypesOfOutboxDocs](T1.TypesOfOutboxDocs_Id, T1.TypesOfOutboxDocs_NameOfType, T1.TypesOfOutboxDocs_NumberingMethod, T1.TypesOfOutboxDocs_NumeratorPrefix)
    FROM (
        SELECT 
            T.Id AS TypesOfOutboxDocs_Id, 
            T.NameOfType AS TypesOfOutboxDocs_NameOfType, 
            T.NumberingMethod AS TypesOfOutboxDocs_NumberingMethod, 
            T.NumeratorPrefix AS TypesOfOutboxDocs_NumeratorPrefix, 
            True AS _from0
        FROM okimtsDbEntities.TypesOfOutboxDocs AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for okimtsDbModelStoreContainer.Users.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView9()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Users
        [okimtsDbModel.Store.Users](T1.Users_id, T1.Users_UniqId, T1.Users_Name, T1.Users_Employe, T1.Users_Invalid, T1.Users_Files)
    FROM (
        SELECT 
            T.id AS Users_id, 
            T.UniqId AS Users_UniqId, 
            T.Name AS Users_Name, 
            T.Employe AS Users_Employe, 
            T.Invalid AS Users_Invalid, 
            T.Files AS Users_Files, 
            True AS _from0
        FROM okimtsDbEntities.Users AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for okimtsDbModelStoreContainer.CompanyStructures.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView10()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing CompanyStructures
        [okimtsDbModel.Store.CompanyStructures](T1.CompanyStructures_Id, T1.CompanyStructures_DepartmentName, T1.CompanyStructures_ParentDepartmentId)
    FROM (
        SELECT 
            T.Id AS CompanyStructures_Id, 
            T.DepartmentName AS CompanyStructures_DepartmentName, 
            T.ParentDepartmentId AS CompanyStructures_ParentDepartmentId, 
            True AS _from0
        FROM okimtsDbEntities.CompanyStructures AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for okimtsDbEntities.BuildinObjects.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView11()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing BuildinObjects
        [okimtsDbModel.BuildinObject](T1.BuildinObject_Id, T1.BuildinObject_ObjName, T1.BuildinObject_ObjCode, T1.BuildinObject_ProjCypher, T1.BuildinObject_SZS)
    FROM (
        SELECT 
            T.Id AS BuildinObject_Id, 
            T.ObjName AS BuildinObject_ObjName, 
            T.ObjCode AS BuildinObject_ObjCode, 
            T.ProjCypher AS BuildinObject_ProjCypher, 
            T.SZS AS BuildinObject_SZS, 
            True AS _from0
        FROM okimtsDbModelStoreContainer.BuildinObjects AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for okimtsDbEntities.ContractorEmployes.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView12()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing ContractorEmployes
        [okimtsDbModel.ContractorEmploye](T1.ContractorEmploye_Id, T1.ContractorEmploye_FullName, T1.ContractorEmploye_FName, T1.ContractorEmploye_SName, T1.ContractorEmploye_LName, T1.ContractorEmploye_LNameDateln, T1.ContractorEmploye_Post, T1.ContractorEmploye_PostDateln, T1.ContractorEmploye_Gender, T1.ContractorEmploye_Email, T1.ContractorEmploye_Phone, T1.ContractorEmploye_Contractor)
    FROM (
        SELECT 
            T.Id AS ContractorEmploye_Id, 
            T.FullName AS ContractorEmploye_FullName, 
            T.FName AS ContractorEmploye_FName, 
            T.SName AS ContractorEmploye_SName, 
            T.LName AS ContractorEmploye_LName, 
            T.LNameDateln AS ContractorEmploye_LNameDateln, 
            T.Post AS ContractorEmploye_Post, 
            T.PostDateln AS ContractorEmploye_PostDateln, 
            T.Gender AS ContractorEmploye_Gender, 
            T.Email AS ContractorEmploye_Email, 
            T.Phone AS ContractorEmploye_Phone, 
            T.Contractor AS ContractorEmploye_Contractor, 
            True AS _from0
        FROM okimtsDbModelStoreContainer.ContractorEmployes AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for okimtsDbEntities.Contractors.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView13()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Contractors
        [okimtsDbModel.Contractor](T1.Contractor_Id, T1.Contractor_OrgName, T1.Contractor_Email, T1.Contractor_Phone, T1.Contractor_Fax)
    FROM (
        SELECT 
            T.Id AS Contractor_Id, 
            T.OrgName AS Contractor_OrgName, 
            T.Email AS Contractor_Email, 
            T.Phone AS Contractor_Phone, 
            T.Fax AS Contractor_Fax, 
            True AS _from0
        FROM okimtsDbModelStoreContainer.Contractors AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for okimtsDbEntities.DocStates.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView14()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing DocStates
        [okimtsDbModel.DocState](T1.DocState_Id, T1.DocState_StateName)
    FROM (
        SELECT 
            T.Id AS DocState_Id, 
            T.StateName AS DocState_StateName, 
            True AS _from0
        FROM okimtsDbModelStoreContainer.DocStates AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for okimtsDbEntities.Employes.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView15()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Employes
        [okimtsDbModel.Employe](T1.Employe_Id, T1.Employe_FullName, T1.Employe_NameInDocs, T1.Employe_FName, T1.Employe_SName, T1.Employe_LName, T1.Employe_State, T1.Employe_Email, T1.Employe_Phone, T1.Employe_Post, T1.Employe_DepartmentId)
    FROM (
        SELECT 
            T.Id AS Employe_Id, 
            T.FullName AS Employe_FullName, 
            T.NameInDocs AS Employe_NameInDocs, 
            T.FName AS Employe_FName, 
            T.SName AS Employe_SName, 
            T.LName AS Employe_LName, 
            T.State AS Employe_State, 
            T.Email AS Employe_Email, 
            T.Phone AS Employe_Phone, 
            T.Post AS Employe_Post, 
            T.DepartmentId AS Employe_DepartmentId, 
            True AS _from0
        FROM okimtsDbModelStoreContainer.Employes AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for okimtsDbEntities.FileMetaDatas.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView16()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing FileMetaDatas
        [okimtsDbModel.FileMetaData](T1.FileMetaData_Id, T1.FileMetaData_FileName, T1.FileMetaData_UploadDataTime, T1.FileMetaData_Users, T1.FileMetaData_FileSize, T1.FileMetaData_Data)
    FROM (
        SELECT 
            T.Id AS FileMetaData_Id, 
            T.FileName AS FileMetaData_FileName, 
            T.UploadDataTime AS FileMetaData_UploadDataTime, 
            T.Users AS FileMetaData_Users, 
            T.FileSize AS FileMetaData_FileSize, 
            T.Data AS FileMetaData_Data, 
            True AS _from0
        FROM okimtsDbModelStoreContainer.FileMetaDatas AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for okimtsDbEntities.InboxDocuments.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView17()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing InboxDocuments
        [okimtsDbModel.InboxDocument](T1.InboxDocument_Id, T1.InboxDocument_Sender, T1.InboxDocument_SenderNum, T1.InboxDocument_SenderDate, T1.InboxDocument_ResponseOn, T1.InboxDocument_Reciever, T1.InboxDocument_DocTheme, T1.InboxDocument_DocState, T1.InboxDocument_BuildingObj, T1.InboxDocument_Files)
    FROM (
        SELECT 
            T.Id AS InboxDocument_Id, 
            T.Sender AS InboxDocument_Sender, 
            T.SenderNum AS InboxDocument_SenderNum, 
            T.SenderDate AS InboxDocument_SenderDate, 
            T.ResponseOn AS InboxDocument_ResponseOn, 
            T.Reciever AS InboxDocument_Reciever, 
            T.DocTheme AS InboxDocument_DocTheme, 
            T.DocState AS InboxDocument_DocState, 
            T.BuildingObj AS InboxDocument_BuildingObj, 
            T.Files AS InboxDocument_Files, 
            True AS _from0
        FROM okimtsDbModelStoreContainer.InboxDocuments AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for okimtsDbEntities.OutboxDocuments.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView18()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing OutboxDocuments
        [okimtsDbModel.OutboxDocument](T1.OutboxDocument_Id, T1.OutboxDocument_RecieverOrg, T1.OutboxDocument_RecieverEmploye, T1.OutboxDocument_BuildingObj, T1.OutboxDocument_OutboxNum, T1.OutboxDocument_OutboxDate, T1.OutboxDocument_DocTheme, T1.OutboxDocument_WhoSign, T1.OutboxDocument_WhoMade, T1.OutboxDocument_ResponseOn, T1.OutboxDocument_SentDate, T1.OutboxDocument_DocState, T1.OutboxDocument_Files, T1.OutboxDocument_TypeOfOutboxDoc)
    FROM (
        SELECT 
            T.Id AS OutboxDocument_Id, 
            T.RecieverOrg AS OutboxDocument_RecieverOrg, 
            T.RecieverEmploye AS OutboxDocument_RecieverEmploye, 
            T.BuildingObj AS OutboxDocument_BuildingObj, 
            T.OutboxNum AS OutboxDocument_OutboxNum, 
            T.OutboxDate AS OutboxDocument_OutboxDate, 
            T.DocTheme AS OutboxDocument_DocTheme, 
            T.WhoSign AS OutboxDocument_WhoSign, 
            T.WhoMade AS OutboxDocument_WhoMade, 
            T.ResponseOn AS OutboxDocument_ResponseOn, 
            T.SentDate AS OutboxDocument_SentDate, 
            T.DocState AS OutboxDocument_DocState, 
            T.Files AS OutboxDocument_Files, 
            T.TypeOfOutboxDoc AS OutboxDocument_TypeOfOutboxDoc, 
            True AS _from0
        FROM okimtsDbModelStoreContainer.OutboxDocuments AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for okimtsDbEntities.TypesOfOutboxDocs.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView19()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing TypesOfOutboxDocs
        [okimtsDbModel.TypesOfOutboxDoc](T1.TypesOfOutboxDoc_Id, T1.TypesOfOutboxDoc_NameOfType, T1.TypesOfOutboxDoc_NumberingMethod, T1.TypesOfOutboxDoc_NumeratorPrefix)
    FROM (
        SELECT 
            T.Id AS TypesOfOutboxDoc_Id, 
            T.NameOfType AS TypesOfOutboxDoc_NameOfType, 
            T.NumberingMethod AS TypesOfOutboxDoc_NumberingMethod, 
            T.NumeratorPrefix AS TypesOfOutboxDoc_NumeratorPrefix, 
            True AS _from0
        FROM okimtsDbModelStoreContainer.TypesOfOutboxDocs AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for okimtsDbEntities.Users.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView20()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Users
        [okimtsDbModel.User](T1.User_id, T1.User_UniqId, T1.User_Name, T1.User_Employe, T1.User_Invalid, T1.User_Files)
    FROM (
        SELECT 
            T.id AS User_id, 
            T.UniqId AS User_UniqId, 
            T.Name AS User_Name, 
            T.Employe AS User_Employe, 
            T.Invalid AS User_Invalid, 
            T.Files AS User_Files, 
            True AS _from0
        FROM okimtsDbModelStoreContainer.Users AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for okimtsDbEntities.CompanyStructures.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView21()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing CompanyStructures
        [okimtsDbModel.CompanyStructure](T1.CompanyStructure_Id, T1.CompanyStructure_DepartmentName, T1.CompanyStructure_ParentDepartmentId)
    FROM (
        SELECT 
            T.Id AS CompanyStructure_Id, 
            T.DepartmentName AS CompanyStructure_DepartmentName, 
            T.ParentDepartmentId AS CompanyStructure_ParentDepartmentId, 
            True AS _from0
        FROM okimtsDbModelStoreContainer.CompanyStructures AS T
    ) AS T1");
        }
    }
}
